[{"path":"https://sermetpekin.github.io/vyos-repo/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Sermet Pekin sermetpekin@gmail.com Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sermet Pekin. Author, maintainer, copyright holder.","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pekin S (2024). vyos: Interface Multiple Data Providers EDDS FRED. R package version 1.0.0, https://sermetpekin.github.io/vyos-repo/, https://github.com/SermetPekin/vyos-repo.","code":"@Manual{,   title = {vyos: Interface for Multiple Data Providers EDDS and FRED},   author = {Sermet Pekin},   year = {2024},   note = {R package version 1.0.0, https://sermetpekin.github.io/vyos-repo/},   url = {https://github.com/SermetPekin/vyos-repo}, }"},{"path":[]},{"path":"https://sermetpekin.github.io/vyos-repo/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Interface for Multiple Data Providers EDDS and FRED","text":"vyos package interface make requests data providers. Current version able connect APIs EDDS CBRT (Central Bank Republic Türkiye) FRED API FED (Federal Reserve Bank).","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interface for Multiple Data Providers EDDS and FRED","text":"","code":"# install.packages(\"vyos\")"},{"path":"https://sermetpekin.github.io/vyos-repo/index.html","id":"development-version","dir":"","previous_headings":"Installation","what":"Development version","title":"Interface for Multiple Data Providers EDDS and FRED","text":"","code":"library(devtools) install_github(\"SermetPekin/vyos-repo\")"},{"path":[]},{"path":"https://sermetpekin.github.io/vyos-repo/index.html","id":"set_api_key","dir":"","previous_headings":"Usage","what":"set_api_key","title":"Interface for Multiple Data Providers EDDS and FRED","text":"","code":"set_api_key( \"ABCDEFGHIJKLMOP\" , \"evds\" , \"env\" ) set_api_key( \"ABCDEFGHIJKLMOP\" , \"fred\" , \"env\" ) # or set_api_key( \"ABCDEFGHIJKLMOP\" , \"evds\" , \"file\" ) set_api_key( \"ABCDEFGHIJKLMOP\" , \"fred\" , \"file\" )"},{"path":"https://sermetpekin.github.io/vyos-repo/index.html","id":"get_series","dir":"","previous_headings":"Usage","what":"get_series","title":"Interface for Multiple Data Providers EDDS and FRED","text":"…","code":"obj<- get_series( \"UNRATE\" )   print(obj)   df<- obj$data   print(df) # ->[fred]: pausing before a new request.->[fred]: pausing before a new request. # ======================================vyos_GETPREP======= #   status      : completed #   index       : UNRATE #   start_year  : 2000-01-01 #   end_year    : 2100-01-01 # ................... resolved [completed] .............. #  # .................................. #   .........> lines   ............. # .................................. # # each line corresponds a different set of func and data #     data can be reached as below #         --> obj$lines$data #   # A tibble: 1 × 8 #   index  source base   comments freq  fnc_str         fnc          data     #   <chr>  <chr>  <chr>  <chr>    <chr> <chr>           <named list> <list>   # 1 UNRATE fred   series \" \"      null  fred_series_fnc <fn>         <tibble> # .................................. #     .........> (combined) data ... # .................................. #     a combined data frame will be constructed #     combined data can be reached as #         --> obj$data #   # A tibble: 228 × 2 #    date       UNRATE #    <date>      <dbl> #  1 2005-01-01    5.3 #  2 2005-02-01    5.4 #  3 2005-03-01    5.2 #  4 2005-04-01    5.2 #  5 2005-05-01    5.1 #  6 2005-06-01    5   #  7 2005-07-01    5   #  8 2005-08-01    4.9 #  9 2005-09-01    5   # 10 2005-10-01    5   # # ℹ 218 more rows # # ℹ Use `print(n = ...)` to see more rows # ........................................................... #  # ========================================================= # # A tibble: 228 × 2 #    date       UNRATE #    <date>      <dbl> #  1 2005-01-01    5.3 #  2 2005-02-01    5.4 #  3 2005-03-01    5.2 #  4 2005-04-01    5.2 #  5 2005-05-01    5.1 #  6 2005-06-01    5   #  7 2005-07-01    5   #  8 2005-08-01    4.9 #  9 2005-09-01    5   # 10 2005-10-01    5   # # ℹ 218 more rows # # ℹ Use `print(n = ...)` to see more rows template <- \"   UNRATE    bie_abreserv   \"   obj <- get_series( template )   print( obj )   df <- obj$data   print(df )   > print( obj )  #    # ======================================vyos_GETPREP======= #   status      : completed #   index       :  #   UNRATE  #   bie_abreserv #    #   start_date  : 2000-01-01 #   end_date    : 2100-01-01 # ................... resolved [completed] .............. #  # .................................. #   .........> lines   ............. # .................................. # # each line corresponds a different set of func and data #     data can be reached as below #         --> obj$lines$data #   # A tibble: 2 × 8 #   index        source base   comments freq  fnc_str         fnc          data               #   <chr>        <chr>  <chr>  <chr>    <chr> <chr>           <named list> <list>             # 1 UNRATE       fred   series \" \"      null  fred_series_fnc <fn>         <tibble [228 × 2]> # 2 bie_abreserv evds   table  \" \"      null  evds_table_fnc  <fn>         <tibble [287 × 6]> # .................................. #     .........> (combined) data ... # .................................. #     a combined data frame will be constructed #     combined data can be reached as #         --> obj$data #   # A tibble: 287 × 7 #    date       UNRATE TP_AB_B1 TP_AB_B2 TP_AB_B3 TP_AB_B4 TP_AB_B6 #    <date>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #  1 2005-01-01    5.3    1592.   37095.   15254.   38687.   53941. #  2 2005-02-01    5.4    1618.   36652.   15178.   38270.   53448. #  3 2005-03-01    5.2    1592    38049.   12767.   39641.   52408. #  4 2005-04-01    5.2    1615.   37334.   13431.   38949.   52380. #  5 2005-05-01    5.1    1562.   35804.   14924.   37366.   52290. #  6 2005-06-01    5      1625.   39981.   15968.   41606.   57573. #  7 2005-07-01    5      1590.   42905.   16266.   44495.   60761. #  8 2005-08-01    4.9    1618.   41183.   18685.   42800.   61485. #  9 2005-09-01    5      1764.   41765.   19445.   43529    62974. # 10 2005-10-01    5      1763.   44811.   14702.   46574    61276. # # ℹ 277 more rows # # ℹ Use print(n = ...) to see more rows # ........................................................... #  # ========================================================= o <- get_series(\"bie_yssk\" , start_date = \"2010-01-01\") o # ======================================vyos_GETPREP======= #     status      : completed # index       : bie_yssk # start_date  : 2010-01-01 # end_date    : 2100-01-01 # ................... resolved [completed] .............. #  # .................................. # .........> lines   ............. # .................................. # # each line corresponds to a different set of func and data # data can be reached as below > obj$lines$data # # A tibble: 1 × 8 # index    source base  comments freq  fnc_str        fnc          data               # <chr>    <chr>  <chr> <chr>    <chr> <chr>          <named list> <list>             #     1 bie_yssk evds   table \" \"      null  evds_table_fnc <fn>         <tibble [167 × 7]> #     .................................. # .........> (combined) data ... # .................................. # a combined data frame will be constructed # combined data can be reached as > obj$data # # A tibble: 167 × 7 # date       TP_YSSK_A1 TP_YSSK_A2 TP_YSSK_A3 TP_YSSK_A4 TP_YSSK_A5 TP_YSSK_A6 # <date>          <dbl>      <dbl>      <dbl>      <dbl>      <dbl>      <dbl> #     1 2010-01-01       7928       6126       5020       5644      51100      75818 # 2 2010-02-01       7619       6030       4911       5521      50088      74168 # 3 2010-03-01       7517       5998       4920       5534      49625      73595 # 4 2010-04-01       7333       5822       4859       5435      49360      72809 # 5 2010-05-01       7136       5510       4922       5266      48108      70942 # 6 2010-06-01       6906       5257       4449       5277      47464      69353 # 7 2010-07-01       6836       5363       4445       5396      49051      71092 # 8 2010-08-01       6758       5291       4411       5281      48407      70148 # 9 2010-09-01       6799       5200       4411       5375      50099      71885 # 10 2010-10-01       6770       5094       4324       5358      51091      72637 # # ℹ 157 more rows # # ℹ Use print(n = ...) to see more rows # ........................................................... #  # ========================================================="},{"path":"https://sermetpekin.github.io/vyos-repo/index.html","id":"indexes-can-be-given-as-a-vector-or-a-string-template","dir":"","previous_headings":"Usage","what":"indexes can be given as a vector or a string template","title":"Interface for Multiple Data Providers EDDS and FRED","text":"combined data frame can accessed via objdataseealsoobjlines","code":"index_vector  = c( \"TP_YSSK_A1\" , \"TP_YSSK_A2\" ) # or as a template it gives same result  index_template <- \" TP_YSSK_A1 TP_YSSK_A2 \"  o <- get_series(index_vector ) o  o <- get_series(index_template ) o df_raw <- o$data  df_raw # # A tibble: 287 × 3 # date       TP_YSSK_A1 TP_YSSK_A2 # <date>          <dbl>      <dbl> #     1 2000-01-01         NA         NA # 2 2000-02-01         NA         NA # 3 2000-03-01         NA         NA # 4 2000-04-01         NA         NA # 5 2000-05-01         NA         NA # 6 2000-06-01         NA         NA # 7 2000-07-01         NA         NA # 8 2000-08-01         NA         NA # 9 2000-09-01         NA         NA # 10 2000-10-01         NA         NA # # ℹ 277 more rows # # ℹ Use `print(n = ...)` to see more rows"},{"path":"https://sermetpekin.github.io/vyos-repo/index.html","id":"remove_na_safe","dir":"","previous_headings":"Usage","what":"remove_na_safe","title":"Interface for Multiple Data Providers EDDS and FRED","text":"removes NA values data frame columns NA certain point certain point. value NA row continues without removing row columns row NA protect meaningful date sequence time series current data frame.","code":"df <- remove_na_safe(df_raw ) df  # # A tibble: 263 × 3 # date       TP_YSSK_A1 TP_YSSK_A2 # <date>          <dbl>      <dbl> #     1 2002-01-01       2673       1197 # 2 2002-02-01       3235       1262 # 3 2002-03-01       3561       1432 # 4 2002-04-01       3872       1525 # 5 2002-05-01       4124       1642 # 6 2002-06-01       4432       1748 # 7 2002-07-01       4823       1841 # 8 2002-08-01       4903       1732 # 9 2002-09-01       5155       1706 # 10 2002-10-01       5066       1709 # # ℹ 253 more rows # ℹ Use `print(n = ...)` to see more rows"},{"path":"https://sermetpekin.github.io/vyos-repo/index.html","id":"lag_df","dir":"","previous_headings":"Usage","what":"lag_df","title":"Interface for Multiple Data Providers EDDS and FRED","text":"takes data frame list column names lag sequences, creates data frame lagged values column names given column name exists data frame. require give source name. figures index IDs given. individual data frames can reached via objectlinesdata","code":"df2 <- lag_df( df , list( TP_YSSK_A1 = 1 : 3 , TP_YSSK_A2 = 1 : 6 ) ) df2 # # A tibble: 263 × 12 # date       TP_YSSK_A1 TP_YSSK_A2 TP_YSSK_A1_lag_1 TP_YSSK_A1_lag_2 TP_YSSK_A1_lag_3 TP_YSSK_A2_lag_1 TP_YSSK_A2_lag_2 # <date>          <dbl>      <dbl>            <dbl>            <dbl>            <dbl>            <dbl>            <dbl> #     1 2002-01-01       2673       1197               NA               NA               NA               NA               NA # 2 2002-02-01       3235       1262             2673               NA               NA             1197               NA # 3 2002-03-01       3561       1432             3235             2673               NA             1262             1197 # 4 2002-04-01       3872       1525             3561             3235             2673             1432             1262 # 5 2002-05-01       4124       1642             3872             3561             3235             1525             1432 # 6 2002-06-01       4432       1748             4124             3872             3561             1642             1525 # 7 2002-07-01       4823       1841             4432             4124             3872             1748             1642 # 8 2002-08-01       4903       1732             4823             4432             4124             1841             1748 # 9 2002-09-01       5155       1706             4903             4823             4432             1732             1841 # 10 2002-10-01       5066       1709             5155             4903             4823             1706             1732 # # ℹ 253 more rows # # ℹ 4 more variables: TP_YSSK_A2_lag_3 <dbl>, TP_YSSK_A2_lag_4 <dbl>, TP_YSSK_A2_lag_5 <dbl>, TP_YSSK_A2_lag_6 <dbl> # # ℹ Use `print(n = ...)` to see more rows index_template <- \" TP_YSSK_A1 TP_YSSK_A2 UNRATE \"  o <- get_series(index_template ) o  # [cache was saved]->[evds]: pausing before a new request. # [cache was saved]->[fred]: pausing before a new request.> o #  # ======================================vyos_GETPREP======= #     status      : completed # index       :  #     TP_YSSK_A1 # TP_YSSK_A2 # UNRATE #  # start_year  : 2000-01-01 # end_year    : 2100-01-01 # ................... resolved [completed] .............. #  # .................................. # .........> lines   ............. # .................................. # # each line corresponds to a different set of func and data # data can be reached as below # --> obj$lines$data # # A tibble: 3 × 8 # index      source base   comments freq  fnc_str         fnc          data               # <chr>      <chr>  <chr>  <chr>    <chr> <chr>           <named list> <list>             #     1 TP_YSSK_A1 evds   series \" \"      null  evds_series_fnc <fn>         <tibble [287 × 2]> #     2 TP_YSSK_A2 evds   series \" \"      null  evds_series_fnc <fn>         <tibble [287 × 2]> #     3 UNRATE     fred   series \" \"      null  fred_series_fnc <fn>         <tibble [228 × 2]> #     .................................. # .........> (combined) data ... # .................................. # a combined data frame will be constructed # combined data can be reached as # --> obj$data # # A tibble: 228 × 4 # date       TP_YSSK_A1 TP_YSSK_A2 UNRATE # <date>          <dbl>      <dbl>  <dbl> #     1 2005-01-01       5509       2226    5.3 # 2 2005-02-01       5581       2299    5.4 # 3 2005-03-01       5507       2347    5.2 # 4 2005-04-01       5699       2444    5.2 # 5 2005-05-01       5802       2404    5.1 # 6 2005-06-01       6023       2321    5   # 7 2005-07-01       5886       2565    5   # 8 2005-08-01       6079       2577    4.9 # 9 2005-09-01       5986       2525    5   # 10 2005-10-01       6103       2548    5   # # ℹ 218 more rows # # ℹ Use `print(n = ...)` to see more rows # ........................................................... #  # ========================================================= > o$lines # # A tibble: 3 × 8 #   index        source base   comments      freq  fnc_str         fnc          data               #   <chr>        <chr>  <chr>  <chr>         <chr> <chr>           <named list> <list>             # 1 UNRATE       fred   series fred (series) null  fred_series_fnc <fn>         <tibble [228 × 2]> # 2 bie_abreserv evds   table  evds (table)  null  evds_table_fnc  <fn>         <tibble [287 × 6]> # 3 TP.AB.B1     evds   series evds (series) null  evds_series_fnc <fn>         <tibble [287 × 2]> > o$lines$data # [[1]] # # A tibble: 228 × 2 #    date       UNRATE #    <date>      <dbl> #  1 2005-01-01    5.3 #  2 2005-02-01    5.4 #  3 2005-03-01    5.2 #  4 2005-04-01    5.2 #  5 2005-05-01    5.1 #  6 2005-06-01    5   #  7 2005-07-01    5   #  8 2005-08-01    4.9 #  9 2005-09-01    5   # 10 2005-10-01    5   # # ℹ 218 more rows # # ℹ Use `print(n = ...)` to see more rows #  # [[2]] # # A tibble: 287 × 6 #    date       TP_AB_B1 TP_AB_B2 TP_AB_B3 TP_AB_B4 TP_AB_B6 #    <date>        <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #  1 2000-01-01    1011    22859.    8943.   23870.   32812. #  2 2000-02-01    1011    22907.    8296.   23918.   32214. #  3 2000-03-01    1011.   22926.    9817.   23937.   33754. #  4 2000-04-01    1011.   22337     8579.   23348.   31926. #  5 2000-05-01    1011.   22950.    8451.   23961.   32412. #  6 2000-06-01    1011.   24547.    9270.   25558.   34827. #  7 2000-07-01    1010.   24477.   10575.   25487    36062. #  8 2000-08-01    1033    24457    10146.   25490    35636. #  9 2000-09-01    1025    24160    10715.   25185    35900. # 10 2000-10-01     988    23593     9970.   24581    34551. # # ℹ 277 more rows # # ℹ Use `print(n = ...)` to see more rows #  # [[3]] # # A tibble: 287 × 2 #    date       TP.AB.B1 #    <date>        <dbl> #  1 2000-01-01    1011  #  2 2000-02-01    1011  #  3 2000-03-01    1011. #  4 2000-04-01    1011. #  5 2000-05-01    1011. #  6 2000-06-01    1011. #  7 2000-07-01    1010. #  8 2000-08-01    1033  #  9 2000-09-01    1025  # 10 2000-10-01     988  # # ℹ 277 more rows # # ℹ Use `print(n = ...)` to see more rows"},{"path":"https://sermetpekin.github.io/vyos-repo/index.html","id":"excel","dir":"","previous_headings":"Usage","what":"excel","title":"Interface for Multiple Data Providers EDDS and FRED","text":"excel function write data frames object","code":"> obj <- get_series( index = template_test() ) > excel(obj , \"file_name.xlsx\" , \"somefolder\" )  or  > excel(obj , \"file_name\" , \"somefolder\" )"},{"path":[]},{"path":"https://sermetpekin.github.io/vyos-repo/index.html","id":"cbrt","dir":"","previous_headings":"","what":"CBRT","title":"Interface for Multiple Data Providers EDDS and FRED","text":"https://evds2.tcmb.gov.tr/index.php?/evds/userDocs","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/index.html","id":"fred","dir":"","previous_headings":"","what":"FRED","title":"Interface for Multiple Data Providers EDDS and FRED","text":"https://fred.stlouisfed.org/docs/api/api_key.html","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates an excel file from a data.frame or a list of data.frame or from\nvyos_GETPREP object. — excel","title":"Creates an excel file from a data.frame or a list of data.frame or from\nvyos_GETPREP object. — excel","text":"excel() function creates excel file according object given. data.frame List data frame vyos_GETPREP object can passed..","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates an excel file from a data.frame or a list of data.frame or from\nvyos_GETPREP object. — excel","text":"","code":"excel(   dfs = null,   file_name = null,   folder = null,   .debug = T,   env = rlang::caller_env(),   ... )"},{"path":"https://sermetpekin.github.io/vyos-repo/reference/excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates an excel file from a data.frame or a list of data.frame or from\nvyos_GETPREP object. — excel","text":"dfs object list data frame write file_name file name save folder folder save file .debug internal use env environment ... future versions","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/excel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates an excel file from a data.frame or a list of data.frame or from\nvyos_GETPREP object. — excel","text":"object list data frame back","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/excel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates an excel file from a data.frame or a list of data.frame or from\nvyos_GETPREP object. — excel","text":"","code":"if (FALSE) { excel( data.frame(a = 1 : 3 ) , file_name = \"test1.xlsx\" , folder = \".\" ) }"},{"path":"https://sermetpekin.github.io/vyos-repo/reference/get_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Requests data from multiple data sources.\nEDDS API and FRED API at this version. — get_series","title":"Requests data from multiple data sources.\nEDDS API and FRED API at this version. — get_series","text":"get_series() function requests data data sources. one index given character vector string template requests items individually corresponding sources figuring format item given. Combines data frame common frequencies. Returns data combined data frame also individual data frames.","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/get_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Requests data from multiple data sources.\nEDDS API and FRED API at this version. — get_series","text":"","code":"get_series(   index = null,   start_date = default_start_date(),   end_date = default_end_date(),   freq = null,   cache = F,   na.remove = T,   ...,   source = c(\"multi\", \"evds\", \"fred\"),   base = c(\"multi\", \"series\", \"table\"),   debug = F )"},{"path":"https://sermetpekin.github.io/vyos-repo/reference/get_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Requests data from multiple data sources.\nEDDS API and FRED API at this version. — get_series","text":"index character  vector string start_date limits start date data end_date limits end date data freq frequency rarely needed cache cache option false new request made na.remove safely remove NA values columns NA ... future versions source source evds fred internal use version base table series source internal use version debug debug option development","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/get_series.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Requests data from multiple data sources.\nEDDS API and FRED API at this version. — get_series","text":"vyos_GETPREP S3 object","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/get_series.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Requests data from multiple data sources.\nEDDS API and FRED API at this version. — get_series","text":"","code":"if (FALSE) { o <- get_series(template_test() ) excel( o ) object <- get_series( \"UNRATE\" , start_date= \"2000/01/01\" , na.remove = TRUE ) excel( object  ) }"},{"path":"https://sermetpekin.github.io/vyos-repo/reference/grapes-inn-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"%inn% — %inn%","title":"%inn% — %inn%","text":"%inn%","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/grapes-inn-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"%inn% — %inn%","text":"","code":"x %inn% table"},{"path":"https://sermetpekin.github.io/vyos-repo/reference/grapes-inn-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"%inn% — %inn%","text":"x character check exists vector list table list, data frame vector","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/grapes-inn-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"%inn% — %inn%","text":"bool value TRUE exists FALSE ","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/grapes-inn-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"%inn% — %inn%","text":"","code":".check = \"a\" %inn% data.frame( a = 1 : 5 )"},{"path":"https://sermetpekin.github.io/vyos-repo/reference/inn.html","id":null,"dir":"Reference","previous_headings":"","what":"inn\nchecks if the second parameter includes the first one as a value or a column name or a name — inn","title":"inn\nchecks if the second parameter includes the first one as a value or a column name or a name — inn","text":"inn checks second parameter includes first one value column name name","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/inn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"inn\nchecks if the second parameter includes the first one as a value or a column name or a name — inn","text":"","code":"inn(x, table)"},{"path":"https://sermetpekin.github.io/vyos-repo/reference/inn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"inn\nchecks if the second parameter includes the first one as a value or a column name or a name — inn","text":"x character check exists vector list table list, data frame vector","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/inn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"inn\nchecks if the second parameter includes the first one as a value or a column name or a name — inn","text":"bool value TRUE exists FALSE ","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/inn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"inn\nchecks if the second parameter includes the first one as a value or a column name or a name — inn","text":"","code":".check = inn( \"a\" , list( a = 1 : 5 ) )"},{"path":"https://sermetpekin.github.io/vyos-repo/reference/lag_df.html","id":null,"dir":"Reference","previous_headings":"","what":"lag_df\nCreates extra columns given as a list of column names and sequences.\nuseful to have multiple selection of lags of some columns while some columns to\nbe present only one or two lags or none. — lag_df","title":"lag_df\nCreates extra columns given as a list of column names and sequences.\nuseful to have multiple selection of lags of some columns while some columns to\nbe present only one or two lags or none. — lag_df","text":"lag_df Creates extra columns given list column names sequences. useful multiple selection lags columns columns present one two lags none.","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/lag_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lag_df\nCreates extra columns given as a list of column names and sequences.\nuseful to have multiple selection of lags of some columns while some columns to\nbe present only one or two lags or none. — lag_df","text":"","code":"lag_df(df, laglist)"},{"path":"https://sermetpekin.github.io/vyos-repo/reference/lag_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"lag_df\nCreates extra columns given as a list of column names and sequences.\nuseful to have multiple selection of lags of some columns while some columns to\nbe present only one or two lags or none. — lag_df","text":"df data.frame tibble laglist list column names index lag sequence value","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/lag_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"lag_df\nCreates extra columns given as a list of column names and sequences.\nuseful to have multiple selection of lags of some columns while some columns to\nbe present only one or two lags or none. — lag_df","text":"tibble","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/lag_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lag_df\nCreates extra columns given as a list of column names and sequences.\nuseful to have multiple selection of lags of some columns while some columns to\nbe present only one or two lags or none. — lag_df","text":"","code":"# lag_df(  data.frame(list( a = 1: 5 ) , list(a = 1: 2 )) )"},{"path":"https://sermetpekin.github.io/vyos-repo/reference/lag_df2.html","id":null,"dir":"Reference","previous_headings":"","what":"lag_df2\nCreates extra columns given as a list of column names and sequences.\nuseful to have multiple selection of lags of some columns while some columns to\nbe present only one or two lags or none. — lag_df2","title":"lag_df2\nCreates extra columns given as a list of column names and sequences.\nuseful to have multiple selection of lags of some columns while some columns to\nbe present only one or two lags or none. — lag_df2","text":"lag_df2 Creates extra columns given list column names sequences. useful multiple selection lags columns columns present one two lags none.","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/lag_df2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lag_df2\nCreates extra columns given as a list of column names and sequences.\nuseful to have multiple selection of lags of some columns while some columns to\nbe present only one or two lags or none. — lag_df2","text":"","code":"lag_df2(df, laglist)"},{"path":"https://sermetpekin.github.io/vyos-repo/reference/lag_df2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"lag_df2\nCreates extra columns given as a list of column names and sequences.\nuseful to have multiple selection of lags of some columns while some columns to\nbe present only one or two lags or none. — lag_df2","text":"df data.frame tibble laglist list column names index lag sequence value","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/lag_df2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"lag_df2\nCreates extra columns given as a list of column names and sequences.\nuseful to have multiple selection of lags of some columns while some columns to\nbe present only one or two lags or none. — lag_df2","text":"data.frame","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/lag_df2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lag_df2\nCreates extra columns given as a list of column names and sequences.\nuseful to have multiple selection of lags of some columns while some columns to\nbe present only one or two lags or none. — lag_df2","text":"","code":"# lag_df2(  data.frame(list( a = 1: 5 ) , list(a = 1: 2 )) )"},{"path":"https://sermetpekin.github.io/vyos-repo/reference/print.vyos_GETPREP.html","id":null,"dir":"Reference","previous_headings":"","what":"print.vyos_GETPREP\nGeneric method for S3 vyos_GETPREP object — print.vyos_GETPREP","title":"print.vyos_GETPREP\nGeneric method for S3 vyos_GETPREP object — print.vyos_GETPREP","text":"print.vyos_GETPREP Generic method S3 vyos_GETPREP object","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/print.vyos_GETPREP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print.vyos_GETPREP\nGeneric method for S3 vyos_GETPREP object — print.vyos_GETPREP","text":"","code":"# S3 method for vyos_GETPREP print(x, ...)"},{"path":"https://sermetpekin.github.io/vyos-repo/reference/print.vyos_GETPREP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print.vyos_GETPREP\nGeneric method for S3 vyos_GETPREP object — print.vyos_GETPREP","text":"x S3 vyos_GETPREP object ... arguments passed methods.","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/print.vyos_GETPREP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print.vyos_GETPREP\nGeneric method for S3 vyos_GETPREP object — print.vyos_GETPREP","text":"S3 vyos_GETPREP object","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/print.vyos_GETPREP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"print.vyos_GETPREP\nGeneric method for S3 vyos_GETPREP object — print.vyos_GETPREP","text":"","code":"if (FALSE) {  obj <- get_series(template_test() ) print(obj ) }"},{"path":"https://sermetpekin.github.io/vyos-repo/reference/remove_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a column or columns from data.frame — remove_columns","title":"Remove a column or columns from data.frame — remove_columns","text":"Remove column columns data.frame","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/remove_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a column or columns from data.frame — remove_columns","text":"","code":"remove_columns(df, column_names , verbose = T )"},{"path":"https://sermetpekin.github.io/vyos-repo/reference/remove_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a column or columns from data.frame — remove_columns","text":"df data.frame tibble column_names column name column names character vector verbose bool gives extra info removed column.","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/remove_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove a column or columns from data.frame — remove_columns","text":"data.frame","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/remove_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove a column or columns from data.frame — remove_columns","text":"","code":"df <- remove_columns(cars, \"speed\") #> removing ...speed #>"},{"path":"https://sermetpekin.github.io/vyos-repo/reference/remove_na_safe.html","id":null,"dir":"Reference","previous_headings":"","what":"remove_na_safe — remove_na_safe","title":"remove_na_safe — remove_na_safe","text":"removes rows beginning end data.frame provided columns NA.","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/remove_na_safe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"remove_na_safe — remove_na_safe","text":"","code":"remove_na_safe(df , verbose = F )"},{"path":"https://sermetpekin.github.io/vyos-repo/reference/remove_na_safe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"remove_na_safe — remove_na_safe","text":"df data.frame remove na rows beginning end verbose give detailed info removing NA values","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/remove_na_safe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"remove_na_safe — remove_na_safe","text":"data.frame","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/remove_na_safe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"remove_na_safe — remove_na_safe","text":"","code":"df <- data.frame( a = c( NA, 2: 7 , NA ) ,                   b = c( NA, NA, 5, NA, 12, NA, 8, 9 ) ) df2 <- remove_na_safe( df )"},{"path":"https://sermetpekin.github.io/vyos-repo/reference/set_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"set_api_key — set_api_key","title":"set_api_key — set_api_key","text":"set_api_key","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/set_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set_api_key — set_api_key","text":"","code":"set_api_key(key = null, source_name = null, .opt = c(\"env\", \"file\"), ...)"},{"path":"https://sermetpekin.github.io/vyos-repo/reference/set_api_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set_api_key — set_api_key","text":"key api key source source_name evds fred .opt choice later usage. env file given save api key later use. Default env saves api key environment variable. env default value selected save api key environment variable file selected save api key current folder. ... future versions","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/set_api_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"set_api_key — set_api_key","text":"null","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/set_api_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"set_api_key — set_api_key","text":"","code":"if (FALSE) {  set_api_key( \"ABCDEFGHIJKLMOP\" , \"evds\" , \"env\" ) set_api_key( \"ABCDEFGHIJKLMOP\" , \"fred\" , \"env\" ) set_api_key( \"ABCDEFGHIJKLMOP\" , \"fred\" , \"file\" ) }"},{"path":"https://sermetpekin.github.io/vyos-repo/reference/template_test.html","id":null,"dir":"Reference","previous_headings":"","what":"template_test\ncreates a string template for testing and example purposes — template_test","title":"template_test\ncreates a string template for testing and example purposes — template_test","text":"template_test creates string template testing example purposes","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/template_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"template_test\ncreates a string template for testing and example purposes — template_test","text":"","code":"template_test()"},{"path":"https://sermetpekin.github.io/vyos-repo/reference/template_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"template_test\ncreates a string template for testing and example purposes — template_test","text":"string template","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/template_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"template_test\ncreates a string template for testing and example purposes — template_test","text":"","code":"template_test() #> [1] \"\\n    UNRATE        #fred (series)\\n    bie_abreserv  #evds (table)\\n    TP.AB.B1      #evds (series)\\n    \""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/vyos-build-checks.html","id":null,"dir":"Reference","previous_headings":"","what":"Dummy examples to check build step — vyos-build-checks","title":"Dummy examples to check build step — vyos-build-checks","text":"page checks examples build process avoid missing","code":""},{"path":"https://sermetpekin.github.io/vyos-repo/reference/vyos-build-checks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dummy examples to check build step — vyos-build-checks","text":"","code":"obj  <- get_series( template_test() , debug = TRUE  ) x = print( obj ) #>  #> ======================================vyos_GETPREP======= #>   status      : ready_to_run #>   index       :  #>     UNRATE        #fred (series) #>     bie_abreserv  #evds (table) #>     TP.AB.B1      #evds (series) #>      #>   start_date  : 2000-01-01 #>   end_date    : 2100-01-01 #>                    status [ready_to_run] #>  #>  lines #>  #>  each line corresponds to a different set of func and data #>     data can be reached as below #>         --> obj$lines$data #>   # A tibble: 3 × 5 #>   index        source base   comments      freq  #>   <chr>        <chr>  <chr>  <chr>         <chr> #> 1 UNRATE       fred   series fred (series) null  #> 2 bie_abreserv evds   table  evds (table)  null  #> 3 TP.AB.B1     evds   series evds (series) null  #>  #>   (combined) data #>  #>     a combined data frame will be constructed #>     combined data can be reached as #>         --> obj$data #>   [no data] #>  #> ========================================================= #>  if( !inherits(x , \"vyos_GETPREP\") ) { stop() }"},{"path":"https://sermetpekin.github.io/vyos-repo/news/index.html","id":"vyos-001","dir":"Changelog","previous_headings":"","what":"vyos 0.0.1","title":"vyos 0.0.1","text":"Initial CRAN submission.","code":""}]
